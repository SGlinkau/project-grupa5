{"mappings":"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","sources":["<anon>","src/myLibrary.js"],"sourcesContent":["(function () {\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire9b51\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire9b51\"] = parcelRequire;\n}\n\n\nvar $dIxxU = parcelRequire(\"dIxxU\");\n\nvar $446fK = parcelRequire(\"446fK\");\nconst $de91a1af95a41f9e$var$watchedListHTML = document.querySelector(\".library-list\");\nconst $de91a1af95a41f9e$var$headerWatchedButton = document.querySelector(\"#watched-btn\");\nwindow.addEventListener(\"load\", ()=>{\n    $de91a1af95a41f9e$export$362f498fb1cc9f80();\n});\n$de91a1af95a41f9e$var$headerWatchedButton.addEventListener(\"click\", ()=>{\n    $de91a1af95a41f9e$export$362f498fb1cc9f80();\n});\n$de91a1af95a41f9e$var$watchedListHTML.addEventListener(\"click\", (e)=>{\n    if (e.target.nodeName !== \"IMG\") return;\n    const id = e.target.getAttribute(\"id\");\n    (0, $446fK.getDetails)(id);\n});\n$de91a1af95a41f9e$var$watchedListHTML.addEventListener(\"click\", (e)=>{\n    if (e.target.nodeName !== \"BUTTON\") return;\n    const id = e.target.getAttribute(\"id\");\n    (0, $446fK.getTrailer)(id);\n});\nasync function $de91a1af95a41f9e$export$362f498fb1cc9f80() {\n    const storageArray = JSON.parse(localStorage.getItem(\"watchedList\"));\n    storageArray.forEach(async (item)=>{\n        const movie = await (0, $dIxxU.default).get(`https://api.themoviedb.org/3/movie/${item.id}`, {\n            params: {\n                language: \"en-US\",\n                api_key: \"c90cdec037818042646f6ab3cec9ea66\"\n            },\n            headers: {\n                accept: \"application/json\"\n            }\n        });\n        let genresArray = [];\n        movie.data.genres.forEach((genre)=>genresArray.push(genre.name));\n        const posterSrc = movie.data.poster_path ? `https://www.themoviedb.org/t/p/w500${movie.data.poster_path}` : noPosterURL;\n        $de91a1af95a41f9e$var$watchedListHTML.insertAdjacentHTML(\"beforeend\", `<li class='movie-box'>\n      <a class='movie-box__link'>\n      <button class='movie-box__trailer-button' type='button' id=${item.id}>Trailer</button>\n    <img class='movie-box__poster' id=${item.id} src='${posterSrc}' />\n    </a>\n    <h2 class='movie-box__title'>${movie.data.title}</h2>\n    <p class='movie-box__info'> ${[\n            ...genresArray\n        ]} | ${movie.data.release_date.slice(0, 4)}</p>\n    </li>`);\n    });\n} // export const addToWatchedButton = document.getElementById('add__watched-btn');\n // const addToQueueButton = document.getElementById('add__queue-btn');\n // addToWatchedButton.addEventListener('click', () => {\n //   // const movieId = e.getAttribute('data-movie-id');\n //   console.log('dupa');\n //   // addToWatchedList(movieId);\n // });\n // addToQueueButton.addEventListener('click', function () {\n //   const movieId = this.getAttribute('data-movie-id');\n //   addToQueueList(movieId);\n // });\n // function addToWatchedList(movieId) {\n //   let watchedList = localStorage.getItem('watched');\n //   if (!watchedList) {\n //     watchedList = [];\n //   } else {\n //     watchedList = JSON.parse(watchedList);\n //   }\n //   watchedList.push(movieId);\n //   localStorage.setItem('watched', JSON.stringify(watchedList));\n //   alert('Film został dodany do Watched!');\n // }\n // function addToQueueList(movieId) {\n //   let queueList = localStorage.getItem('queue');\n //   if (!queueList) {\n //     queueList = [];\n //   } else {\n //     queueList = JSON.parse(queueList);\n //   }\n //   queueList.push(movieId);\n //   localStorage.setItem('queue', JSON.stringify(queueList));\n //   alert('Film został dodany do Queue!');\n // }\n // const watchedList = JSON.parse(localStorage.getItem('watched')) || [];\n // const queueList = JSON.parse(localStorage.getItem('queue')) || [];\n // /*********************************************************************************************************************** */\n // const watchedButton = document.getElementById('watched-btn');\n // const queueButton = document.getElementById('queue-btn');\n // function displayList(listName) {\n //   const list = JSON.parse(localStorage.getItem(listName)) || [];\n //   const listContainer = document.getElementById('list-container');\n //   listContainer.innerHTML = '';\n //   if (list.length === 0) {\n //     listContainer.innerHTML = '<p>Lista jest pusta.</p>';\n //   } else {\n //     const ul = document.createElement('ul');\n //     list.forEach(movieId => {\n //       const li = document.createElement('li');\n //       li.textContent = `Film ID: ${movieId}`;\n //       ul.appendChild(li);\n //     });\n //     listContainer.appendChild(ul);\n //   }\n // }\n // watchedButton.addEventListener('click', () => {\n //   displayList('watched');\n // });\n // queueButton.addEventListener('click', () => {\n //   displayList('queue');\n // });\n\n})();\n//# sourceMappingURL=myLibrary.19c15e5b.js.map\n","import './main.scss';\nimport axios from 'axios';\nimport { getDetails, getTrailer } from './api';\n\nconst watchedListHTML = document.querySelector('.library-list');\nconst headerWatchedButton = document.querySelector('#watched-btn');\n\nwindow.addEventListener('load', () => {\n  buildLibrary();\n});\nheaderWatchedButton.addEventListener('click', () => {\n  buildLibrary();\n});\nwatchedListHTML.addEventListener('click', e => {\n  if (e.target.nodeName !== 'IMG') {\n    return;\n  }\n  const id = e.target.getAttribute('id');\n  getDetails(id);\n});\nwatchedListHTML.addEventListener('click', e => {\n  if (e.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  const id = e.target.getAttribute('id');\n  getTrailer(id);\n});\n\nexport async function buildLibrary() {\n  const storageArray = JSON.parse(localStorage.getItem('watchedList'));\n  storageArray.forEach(async item => {\n    const movie = await axios.get(\n      `https://api.themoviedb.org/3/movie/${item.id}`,\n      {\n        params: {\n          language: 'en-US',\n          api_key: 'c90cdec037818042646f6ab3cec9ea66',\n        },\n        headers: { accept: 'application/json' },\n      }\n    );\n    let genresArray = [];\n    movie.data.genres.forEach(genre => genresArray.push(genre.name));\n\n    const posterSrc = movie.data.poster_path\n      ? `https://www.themoviedb.org/t/p/w500${movie.data.poster_path}`\n      : noPosterURL;\n\n    watchedListHTML.insertAdjacentHTML(\n      'beforeend',\n      `<li class='movie-box'>\n      <a class='movie-box__link'>\n      <button class='movie-box__trailer-button' type='button' id=${\n        item.id\n      }>Trailer</button>\n    <img class='movie-box__poster' id=${item.id} src='${posterSrc}' />\n    </a>\n    <h2 class='movie-box__title'>${movie.data.title}</h2>\n    <p class='movie-box__info'> ${[\n      ...genresArray,\n    ]} | ${movie.data.release_date.slice(0, 4)}</p>\n    </li>`\n    );\n  });\n}\n\n// export const addToWatchedButton = document.getElementById('add__watched-btn');\n// const addToQueueButton = document.getElementById('add__queue-btn');\n\n// addToWatchedButton.addEventListener('click', () => {\n//   // const movieId = e.getAttribute('data-movie-id');\n//   console.log('dupa');\n//   // addToWatchedList(movieId);\n// });\n\n// addToQueueButton.addEventListener('click', function () {\n//   const movieId = this.getAttribute('data-movie-id');\n\n//   addToQueueList(movieId);\n// });\n\n// function addToWatchedList(movieId) {\n//   let watchedList = localStorage.getItem('watched');\n\n//   if (!watchedList) {\n//     watchedList = [];\n//   } else {\n//     watchedList = JSON.parse(watchedList);\n//   }\n\n//   watchedList.push(movieId);\n\n//   localStorage.setItem('watched', JSON.stringify(watchedList));\n\n//   alert('Film został dodany do Watched!');\n// }\n\n// function addToQueueList(movieId) {\n//   let queueList = localStorage.getItem('queue');\n\n//   if (!queueList) {\n//     queueList = [];\n//   } else {\n//     queueList = JSON.parse(queueList);\n//   }\n\n//   queueList.push(movieId);\n\n//   localStorage.setItem('queue', JSON.stringify(queueList));\n\n//   alert('Film został dodany do Queue!');\n// }\n\n// const watchedList = JSON.parse(localStorage.getItem('watched')) || [];\n// const queueList = JSON.parse(localStorage.getItem('queue')) || [];\n\n// /*********************************************************************************************************************** */\n\n// const watchedButton = document.getElementById('watched-btn');\n// const queueButton = document.getElementById('queue-btn');\n\n// function displayList(listName) {\n//   const list = JSON.parse(localStorage.getItem(listName)) || [];\n\n//   const listContainer = document.getElementById('list-container');\n\n//   listContainer.innerHTML = '';\n\n//   if (list.length === 0) {\n//     listContainer.innerHTML = '<p>Lista jest pusta.</p>';\n//   } else {\n//     const ul = document.createElement('ul');\n//     list.forEach(movieId => {\n//       const li = document.createElement('li');\n//       li.textContent = `Film ID: ${movieId}`;\n//       ul.appendChild(li);\n//     });\n//     listContainer.appendChild(ul);\n//   }\n// }\n\n// watchedButton.addEventListener('click', () => {\n//   displayList('watched');\n// });\n\n// queueButton.addEventListener('click', () => {\n//   displayList('queue');\n// });\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$dIxxU","$446fK","$de91a1af95a41f9e$var$watchedListHTML","document","querySelector","$de91a1af95a41f9e$var$headerWatchedButton","$de91a1af95a41f9e$export$362f498fb1cc9f80","storageArray","JSON","parse","localStorage","getItem","forEach","item","movie","default","get","params","language","api_key","headers","accept","genresArray","data","genres","genre","push","name","posterSrc","poster_path","noPosterURL","insertAdjacentHTML","title","release_date","slice","addEventListener","e","target","nodeName","getAttribute","getDetails","getTrailer"],"version":3,"file":"myLibrary.19c15e5b.js.map"}